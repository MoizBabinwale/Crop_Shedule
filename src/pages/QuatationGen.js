import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { getQuotationById } from "../api/api";

const QuatationGen = () => {
  const { quatationId } = useParams();
  const [quotation, setQuotation] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchQuotation = async () => {
      try {
        const data = await getQuotationById(quatationId);
        setQuotation(data);
      } catch (error) {
        console.error("Error fetching quotation:", error);
      } finally {
        setLoading(false);
      }
    };

    if (quatationId) fetchQuotation();
  }, [quatationId]);

  if (loading) return <p className="p-6 text-lg">тП│ Quotation рддреИрдпрд╛рд░ рдХрд┐рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ...</p>;
  if (!quotation) return <p className="p-6 text-red-600">тЭМ Quotation рдирд╣реАрдВ рдорд┐рд▓рд╛</p>;

  return (
    <div className="p-8 print:p-4 print:text-xs">
      <div className="flex justify-end mb-4 print:hidden">
        <button onClick={() => window.print()} className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded shadow">
          Print Quotation
        </button>
      </div>

      <div className="print-area bg-white p-6 rounded shadow-md text-sm border border-gray-300">
        <div className="text-center font-bold text-lg mb-4 border-b pb-2">
          {quotation.cropName} рдХрд╛ {quotation.acres} рдПрдХрдбрд╝ рдХрд╛ рдкреНрд▓реЙрдЯ рдФрд░ рдкрд░реНрдгрдиреЗрддреНрд░ рдЖрдпреБрд░реНрд╡реЗрджреАрдХ рдХреГрд╖рд┐ рдкреНрд░рдгрд╛рд▓реА рдХрд╛ рд╕рд╛рдкреНрддрд╛рд╣рд┐рдХ рд╢реЗрдбреНрдпреВрд▓
        </div>

        <div className="mb-6 p-4 bg-green-50 border border-green-200 rounded-lg shadow-sm text-sm leading-relaxed text-gray-800">
          <h3 className="text-green-700 font-semibold text-base mb-2">ЁЯСитАНЁЯМ╛ рд╢реЗрддрдХрд░реА рдорд╛рд╣рд┐рддреА (Farmer Details)</h3>
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-2">
            <p>
              <span className="font-medium">рд╢реЗрддрдХрд░реА рдирд╛рд╡ (Name):</span> рд╢реНрд░реА {quotation.farmerInfo?.name}
            </p>
            <p>
              <span className="font-medium">рдЧрд╛рд╡ (Place):</span> {quotation.farmerInfo?.place}
            </p>
            <p>
              <span className="font-medium">рддрд╛рд▓реБрдХрд╛ (Tahsil):</span> {quotation.farmerInfo?.tahsil}
            </p>
            <p>
              <span className="font-medium">рдЬрд┐рд▓реНрд╣рд╛ (District):</span> {quotation.farmerInfo?.district}
            </p>
            <p>
              <span className="font-medium">рд░рд╛рдЬреНрдп (State):</span> {quotation.farmerInfo?.state}
            </p>
          </div>
        </div>

        {quotation.weeks.map((week, index) => (
          <table key={index} className="w-full border border-gray-400 mt-6 text-xs print:text-[10px]">
            <thead className="bg-green-100 text-gray-900">
              <tr>
                <th className="border px-2 py-1">рд╕рдкреНрддрд╛рд╣</th>
                <th className="border px-2 py-1">рддрд╛рд░реАрдЦ</th>
                <th className="border px-2 py-1">рдкреНрд░рддрд┐ рд▓реАрдЯрд░ рдкрд╛рдиреА рдореЗрдВ рдорд┐рд▓реА</th>
                <th className="border px-2 py-1">рдкрд╛рдиреА / рдПрдХрдбрд╝</th>
                <th className="border px-2 py-1">рдХреБрд▓ рдПрдХрдбрд╝</th>
                <th className="border px-2 py-1">рдкрд╛рдиреА рдХреБрд▓</th>
                <th className="border px-2 py-1">рдорд╛рддреНрд░рд╛ (рдорд┐рд▓реА/рдЧреНрд░рд╛рдо)</th>
                <th className="border px-2 py-1">рдорд╛рддреНрд░рд╛ (рд▓реАрдЯрд░/рдХрд┐рдЧреНрд░рд╛)</th>
                <th className="border px-2 py-1">рдЖрд░рдВрдн рджрд┐рди</th>
                <th className="border px-2 py-1">рдирд┐рд░реНрджреЗрд╢</th>
                <th className="border px-2 py-1">рдЙрддреНрдкрд╛рдж</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td className="border px-2 py-1 text-center">{week.weekNumber}</td>
                <td className="border px-2 py-1 text-center">{week.date?.slice(0, 10)}</td>
                <td className="border px-2 py-1 text-center">{week.perLiter}</td>
                <td className="border px-2 py-1 text-center">{week.waterPerAcre}</td>
                <td className="border px-2 py-1 text-center">{week.totalAcres}</td>
                <td className="border px-2 py-1 text-center">{week.totalWater}</td>
                <td className="border px-2 py-1 text-center">{week.productAmountMg}</td>
                <td className="border px-2 py-1 text-center">{week.productAmountLtr}</td>
                <td className="border px-2 py-1 text-center">{week.useStartDay}</td>
                <td className="border px-2 py-1 text-center">{week.instructions}</td>
                <td className="border px-2 py-1">
                  <ul className="list-disc pl-4">
                    {(week.products || []).map((prod, i) => (
                      <li key={i}>
                        {prod.name}: {prod.quantity}
                      </li>
                    ))}
                  </ul>
                </td>
              </tr>
            </tbody>
          </table>
        ))}
      </div>
    </div>
  );
};

export default QuatationGen;
